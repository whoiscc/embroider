with
print = func(a) lang print ()
repr = func(a) lang repr ()
U64 = func(a) lang value_u64 ()
Instant = {
    now: func() lang instant_now ()
    elapsed: func(a) lang instant_elapsed ()
}
Vec = {
    new: func() lang vec_new ()
    push: func(a, b) lang vec_push ()
    index: func(a, b) lang vec_index ()
    index_mut: func(a, b, c) lang vec_index_mut ()
}

start = Instant.now() 

xs = Vec.new()
x = U64(117418)
i = U64(0) (
loop match i < U64(1000000) | {False} break | {True} (
    Vec.push(xs, x)
    x mut x ^ x << U64(13)
    x mut x ^ x >> U64(7)
    x mut x ^ x << U64(17)
    i mut i + U64(1)
)
print("check: " + repr(x))

with sort = func(xs, l, h, lt) capture { sort }
    match h - l > U64(1) | {True} with
#        debug = with
#            i = l (
#                print(repr(l) + " .. " + repr(h))
#                loop match i < h | {False} break | {True} (
#                    print(repr(Vec.index(xs, i)))
#                    i mut i + U64(1)
#                )
#                print("---")
#            )
        saved_l = l
        saved_h = h
        pivot = Vec.index(xs, l) 
        h = h - U64(1) (
        loop match l < h | {False} break | {True}
            with x = Vec.index(xs, l) (
            match lt(x, pivot) | {True} (
                l mut l + U64(1)
                continue
            )
            with y = Vec.index(xs, h) (
            match lt(pivot, y) | {True} (
                h mut h - U64(1)
                continue
            )
            match l < h | {True} (
                Vec.index_mut(xs, l, y)
                Vec.index_mut(xs, h, x)
            )))
        sort(xs, saved_l, h, lt)
        sort(xs, h + U64(1), saved_h, lt)
    )
(
sort capture { sort: sort }
sort(xs, U64(0), U64(i), func(a, b) a < b)

with
sum1 = U64(0)
sum2 = U64(0) 
j = U64(0) (
loop match j < i | {False} break | {True} (
    sum1 mut (sum1 + Vec.index(xs, j)) % (U64(1) << U64(32))
    sum2 mut (sum1 + sum2) % (U64(1) << U64(32))
    j mut j + U64(1)
)
with sum = sum2 << U64(32) | sum1 (
print("checksum: " + repr(sum))
print("elapsed: " + repr(Instant.elapsed(start)))
))))